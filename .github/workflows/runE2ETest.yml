name: Run E2E Test
on:
  workflow_call:
    inputs:
      automationBranch:
        description: 'Set the branch to use for automation tests'
        required: false
        default: 'develop'
        type: string
      testToRun:
        description: 'Run this E2E test'
        required: false
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        nodeVersion:
          - 16.15.1
        vscodeVersion:
          - stable
    env:
      GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}
    outputs:
      VSCODE_PATH: ${{ steps.getVSCodePath.outputs.vscodePath }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - name: Git Config action
        uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.IDEE_GH_EMAIL }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./salesforcedx-vscode
          ref: ${{ github.event.ref }}
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodeVersion }}
          cache: npm
          cache-dependency-path: |
            salesforcedx-vscode/package-lock.json
            salesforcedx-vscode-automation-tests/package-lock.json
      - name: Get VSCode path
        id: getVSCodePath
        run: |
          echo "vscodePath=which node" >> $GITHUB_OUTPUT
      - name: Add VSCode to PATH
        run: |
          export PATH=${{ steps.getVSCodePath.outputs.vscodePath }}:$PATH
      - name: Download extension vsixes
        run: |
          mkdir ./extensions
          gh release download -D ./extensions -p '*.vsix'
      - name: Display downloaded vsix files
        run: ls -R ./extensions
      - name: Install extensions
        run: |
          find .extensions -type f -name "*.vsix" -exec code --install-extension {} \;
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Clone automation tests
        uses: actions/checkout@v3
        with:
          repository: forcedotcom/salesforcedx-vscode-automation-tests
          path: salesforcedx-vscode-automation-tests
          ref: ${{ inputs.automationBranch }}
      - name: Install Test Dependencies
        run: |
          npm install
        working-directory: salesforcedx-vscode-automation-tests
      - name: Install the SFDX CLI
        run: npm install -g sfdx-cli
      - name: Verify CLI
        shell: bash
        run: |
          set -e
          sfdx version
          SFDX_CLI_VERSION=$(sfdx version)
          if [[ ((`echo $SFDX_CLI_VERSION | grep -c "sfdx-cli/"` > 0))]]
          then
            echo "sfdx-cli installed -" $SFDX_CLI_VERSION
          else
            echo "The sfdx-cli installation could not be verified"
            exit 1
          fi
      - name: Run headless test
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3
        with:
          run: |
            npm run setup
            npm run automation-tests
          working-directory: salesforcedx-vscode-automation-tests
        env:
          VSCODE_VERSION: ${{ matrix.vscodeVersion }}
          SPEC_FILES: ${{ inputs.testToRun }}
          SFDX_AUTH_URL: ${{ secrets.SFDX_AUTH_URL_E2E }}
          ORG_ID: ${{ secrets.ORG_ID_E2E }}
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: ./salesforcedx-vscode-automation-tests/screenshots
